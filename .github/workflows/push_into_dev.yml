name: develop

on:
  pull_request:
    branches: [cicd]
  push:
    branches: [cicd]

# env:
#   REGISTRY: cr.selcloud.ru
#   IMAGE_NAME: tg_bot_dev

jobs:
#   tests:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.10'
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip3 install poetry
#         curl -sSL 'https://install.python-poetry.org' | python3 -
#         poetry config virtualenvs.create false
#         poetry install $(test "$YOUR_ENV" == production && echo "--no-dev") --no-interaction --no-ansi
#         poetry add flake8-bugbear
#         poetry add flake8-return
#         poetry add flake8-comprehensions
#         poetry add flake8-pie
#         poetry add flake8-print
#         poetry add flake8-quotes
#         poetry add flake8-simplify
#         poetry add flake8-variables-names
#         poetry add pep8-naming
#         poetry add flake8-docstrings
#         pre-commit install
#     - name: Test with flake8 and pre-commit
#       run: |
#         python -m flake8 .
#         pre-commit run --all-files

  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - env:
          INPUTS_IMAGE: tg_bot_dev # image name to build, default: current workflow repository name
          INPUTS_PASSWORD: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_PASSWORD }} # password to docker login to registry, default ${{ github.token }}
          INPUTS_REGISTRY: cr.selcloud.ru # docker registry, default: ghcr.io
          INPUTS_TAG: ${{ github.workflow }}-${{ github.run_number }} # tag, default: current workflow branch (usually it is repository default branch (usually it is master))
          INPUTS_USERNAME: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_USER }} # username to docker login to registry, default: ${{ github.repository_owner }}
        uses: rekgrpth/docker-login-build-push-shell-action@v1
        with:
          context: .
