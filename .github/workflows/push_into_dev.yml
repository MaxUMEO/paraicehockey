name: develop

on:
  pull_request:
    branches: [cicd]
  push:
    branches: [cicd]

# env:
#   REGISTRY: cr.selcloud.ru
#   IMAGE_NAME: tg_bot_dev

jobs:
#   tests:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: '3.10'
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip3 install poetry
#         curl -sSL 'https://install.python-poetry.org' | python3 -
#         poetry config virtualenvs.create false
#         poetry install $(test "$YOUR_ENV" == production && echo "--no-dev") --no-interaction --no-ansi
#         poetry add flake8-bugbear
#         poetry add flake8-return
#         poetry add flake8-comprehensions
#         poetry add flake8-pie
#         poetry add flake8-print
#         poetry add flake8-quotes
#         poetry add flake8-simplify
#         poetry add flake8-variables-names
#         poetry add pep8-naming
#         poetry add flake8-docstrings
#         pre-commit install
#     - name: Test with flake8 and pre-commit
#       run: |
#         python -m flake8 .
#         pre-commit run --all-files

  build-and-push-image-to-github-packages:
    name: Building tg_bot image and pushing it to CR
    runs-on: ubuntu-latest
    # needs: tests
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          ref: cicd
      -
        name: Docker login
        uses: docker/login-action@v2
        with:
          registry: cr.selcloud.ru
          username: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_USER }}
          password: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          run: |
            docker build -t tg_bot_dev .
            docker tag tg_bot_dev cr.selcloud.ru/registry/tg_bot_dev:${{ github.workflow }}-${{ github.run_number }}
            docker push cr.selcloud.ru/registry/tg_bot_dev:${{ github.workflow }}-${{ github.run_number }}
          shell: bash
        # with:
        #   context: .
        #   file: Dockerfile
        #   run: |
        #     docker build -t tg_bot_dev .
        #     docker tag tg_bot_dev cr.selcloud.ru/registry/tg_bot_dev:develop-45
        #     docker push cr.selcloud.ru/registry/tg_bot_dev:develop-45
          shell: bash
          load: false
          no-cache: false
          pull: false
          push: true







      # - name: Build, tag, and push image to Selectel Cloud Container Registry
      #   env:
      #     CR_REGISTRY: crp00000000000000000
      #     CR_REPOSITORY: my-cr-repo
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG .
      #     docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG

      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: Dockerfile
      #     labels: runnumber=${GITHUB_RUN_ID}
      #     push: true
      #     tags: |
      #       ${{ github.workflow }}-${{ github.run_number }}


  # build-and-push-image:
  #   name: Building tg_bot image and pushing it to CR
  #   runs-on: ubuntu-latest
  #   # needs: tests
  #   steps:

  #   - name: Login to docker in Selectel CR
  #     uses: docker/login-action@v2
  #     with:
  #       registry: cr.selcloud.ru
  #       username: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_USER }}
  #       password: ${{ secrets.SELECTEL_CONTAINER_REGISTRY_PASSWORD }}

  #   - name: Build and tag docker image
  #     with:
  #       context: ./
  #       script: |
  #         docker build -t tg_bot_dev .
  #         docker tag tg_bot_dev cr.selcloud.ru/registry/tg_bot_dev:${{ github.workflow }}-${{ github.run_number }}